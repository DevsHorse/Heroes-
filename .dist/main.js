!function(e){var t={};function s(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(n,a,function(t){return e[t]}.bind(null,a));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);const n=e=>{const t=/\s+/gi.test(e);return"string"==typeof e&&e.length>0&&!t};class a{constructor(e,t,s,a,r,i,c,o,l,d,m){this.img=e,this.name=t,this.gender=i,this.actors=c,this.status=d,this.realname=n(s)?s:"-",this.species=n(a)?a:"-",this.citiz=n(r)?r:"-",this.birthDay=n(o)?o:"-",this.deathDay=n(l)?l:"-",this.movies=Array.isArray(m)?m:null}createCard(){const e=document.createDocumentFragment(),t=document.querySelector(".main"),s=document.createElement("div");s.classList.add("card"),s.innerHTML=`\n    <img class="card-img" src="${this.img}" alt="${this.name}">\n    <h2 class="card-name">Name: <span class="name">${this.name}</span></h2>\n    <h3 class="card-realName">Realname: <span class="realName">${this.realname}</span></h3>\n    <div class="card-main">\n      <div class="card-species">Species: <span class="species">${this.species}</span></div>\n      <div class="card-citizenship">Citizenship: <span class="citizenship">${this.citiz}</span></div>\n      <div class="card-gender">Gender: <span class="gender">${this.gender}</span></div>\n      <div class="card-actors">Actors: <span class="actors">${this.actors}</span></div>\n    </div>\n    <div class="card-row">\n      <div class="card-birthday">Birthday: <span class="birthday">${this.birthDay}</span></div>\n      <div class="card-deathday">Deathday: <span class="deathday">${this.deathDay}</span></div>\n    </div>\n    <div class="card-status">Status: <span class="status">${this.status}</span></div>\n    `;const n=document.createElement("div");n.classList.add("card-after");const a=document.createElement("div");a.classList.add("card-movies-title"),a.innerHTML="Films:";const r=document.createElement("ul");r.classList.add("card-movies"),null!==this.movies&&(this.movies.forEach(e=>{const t=document.createElement("li");t.classList.add("movies-item"),t.textContent=e,r.appendChild(t)}),n.appendChild(a),n.appendChild(r),s.appendChild(n)),e.appendChild(s),t.appendChild(e)}}document.addEventListener("DOMContentLoaded",()=>{(()=>{const e=document.querySelector(".logo");let t=0,s=1,n=null;const a=()=>{n=requestAnimationFrame(a),t+=s,0===t&&(s=1),e.style.textShadow=`0 0 ${5+t/5}px #fff`,50===t&&(s=-1)};n=requestAnimationFrame(a)})(),(()=>{const e=document.querySelector(".films-container");e.style.transition="transform 1s ease",document.addEventListener("scroll",()=>{document.documentElement.scrollTop>167?e.style.transform=`translateY(${document.documentElement.scrollTop-167}px)`:e.style.transform="none"})})(),fetch("./dbHeroes.json").then(e=>e.json()).catch(e=>(console.error(e),null)).then(e=>{if(!Array.isArray(e))throw new Error("Data heroes is missing/not array.");(e=>{const t=[];e.map(e=>{e.movies&&e.movies.map(e=>t.push(e))});const s=[...new Set(t)],n=document.querySelector(".films-list");s.forEach((e,t)=>{const s=document.createElement("li");s.classList.add("films-list_item");const a=document.createElement("input");a.classList.add("checkbox"),a.setAttribute("type","checkbox"),a.setAttribute("name",""),a.id=`film${t}`;const r=document.createElement("label");r.setAttribute("for",`${a.id}`),r.textContent=e,n.appendChild(s),s.appendChild(a),s.appendChild(r)})})(e),(e=>{e.forEach(e=>{new a(e.photo,e.name,e.realName,e.species,e.citizenship,e.gender,e.actors,e.birthDay,e.deathDay,e.status,e.movies).createCard()}),document.querySelectorAll(".card").forEach(e=>{e.addEventListener("mouseenter",()=>e.style.transform="scale(1.05)"),e.addEventListener("mouseleave",()=>e.style.transform="scale(1)")})})(e),(()=>{const e=document.querySelector(".films-list"),t=document.querySelectorAll(".card"),s=document.querySelector(".empty-message");let n=[];e.addEventListener("click",e=>{const a=e.target;if("checkbox"===a.type){const e=a.nextElementSibling.textContent;!0===a.checked?n.push(e):n=n.filter(t=>t!==e),t.forEach(e=>{if(e.querySelector(".card-after"))if(n.length){const t=e.querySelectorAll(".movies-item");let s=0;t.forEach(e=>{n.forEach(t=>{t===e.textContent&&s++})}),s===n.length?e.style.display="block":e.style.display="none"}else e.style.display="block";else if(n.length){let t=0;n.forEach(e=>{"Doesn't have movies*"===e&&1===n.length&&t++}),e.style.display=t>0?"block":"none"}else e.style.display="block"})}let r=0;t.forEach(e=>{"block"===e.style.display&&r++}),s.style.display=0!==r?"none":"block"})})()})})}]);